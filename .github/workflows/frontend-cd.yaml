# Workflow name
name: frontend-workflow-cd

# Triggers for the workflow
on:
    # Manual trigger using the workflow_dispatch event
    workflow_dispatch:
    # Automatic trigger on pull request events targeting the main branch
    push:
        branches:
            - main
        paths: frontend/**

permissions:
    id-token: write
    # for writing security events.
    security-events: write
    # only required for workflows in private repositories
    actions: read
    contents: read

jobs:
    linting:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code source frontend
              uses: actions/checkout@v3
            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: latest
            - name: Cache node modules
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: ${{ runner.os }}-node-
            - name: Install Dependencies
              run: |
                  cd frontend
                  npm install
            - name: Run linting
              run: |
                  cd frontend
                  npm run lint
    test:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code source frontend
              uses: actions/checkout@v3
            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: latest

            - name: Cache node modules
              uses: actions/cache@v2
              with:
                  path: ~/.npm
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: ${{ runner.os }}-node-

            - name: Install Dependencies

              run: |
                  cd frontend
                  npm install

            - name: Run test
              run: |
                  cd frontend
                  npm test

    build:
        runs-on: ubuntu-latest
        needs: [linting, test]
        # environment: admin
        steps:
            - name: Checkout code source frontend
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                  role-to-assume: arn:aws:iam::637423333373:role/CodeGuruSecurityGitHubAccessRole
                  aws-region: us-east-1
                  role-session-name: GitHubActionScript

            - name: CodeGuru Security
              uses: aws-actions/codeguru-security@v1
              with:
                  source_path: ./frontend
                  aws_region: us-east-1
                  fail_on_severity: Critical
            - name: Print findings
              run: |
                  ls -l
                  cat codeguru-security-results.sarif.json
